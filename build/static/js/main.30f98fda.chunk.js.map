{"version":3,"sources":["api/auth.js","components/Header.js","api/index.js","components/Routines.js","components/Activities.js","api/Activities.js","api/MyRoutines.js","components/MyRoutines.js","components/SignIn.js","components/SignUp.js","components/Home.js","components/NewRoutine.js","components/Deleted.js","components/Added.js","components/UpdateRoutine.js","components/NewActivity.js","components/UpdateActivity.js","api/getMe.js","index.js"],"names":["register","username","password","fetch","method","headers","body","JSON","stringify","then","response","json","result","catch","error","console","data","signIn","clearCurrentUser","localStorage","removeItem","Header","setCurrentUser","currentUser","to","onClick","URL","fetchData","route","a","fetchDataToken","token","Authorization","Routines","useState","routines","setRoutines","useEffect","map","rou","name","goal","creatorName","style","textIndent","activities","act","duration","count","description","id","Activities","addActivity","rId","activityId","deleteActivityFromRoutine","raId","createActivity","UpdateActivityCountDuration","log","addRoutine","isPublic","updateRoutine","MyRoutines","setActivityToUpdate","setRoutine","myRoutines","setMyRoutines","setDuration","setCount","activity","setActivity","history","useHistory","durChange","evt","target","value","couChange","actChange","addActivityToRoutineMaker","preventDefault","find","addedActivity","routineId","routineActivityId","newMyRout","rout","push","aName","confirm","deletedActivity","filter","destroyRoutine","rName","deleteRoutine","updateCountDurationMaker","type","destroyAct","onSubmit","width","onChange","defaultValue","disabled","hidden","require","SignIn","setToken","usernameInput","setUsernameInput","pwInput","setPwInput","clearInput","handleSubmit","event","setItem","user","alert","message","SignUp","Home","NewRoutine","setName","setGoal","setIsPublic","checked","Deleted","timer","setTimeout","clearTimeout","Added","UpdateRoutine","routine","setId","placeholder","NewActivity","setDescription","UpdateActivity","activityToUpdate","raid","setRaid","getMe","App","getItem","setActivities","className","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30f98fda.chunk.js","sourcesContent":["export function register(username, password) {\n  return fetch(\"https://fitnesstrac-kr.herokuapp.com/api/users/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      return result;\n    })\n    .catch((error) => {\n      console.error(error.response.data);\n    });\n}\nexport function signIn(username, password) {\n  return fetch(\"https://fitnesstrac-kr.herokuapp.com/api/users/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      return result;\n    })\n    .catch((error) => {\n      console.error(error.response.data);\n    });\n}\n\nexport function clearCurrentUser() {\n  localStorage.removeItem(\"token\");\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { clearCurrentUser } from \"../api/auth\";\n\nconst Header = ({ setCurrentUser, currentUser }) => {\n  const handleUserLogout = () => {\n    clearCurrentUser();\n    setCurrentUser(null);\n  };\n\n  return (\n    <header>\n      <h1>Welcome to Fitness Trackr</h1>\n      <NavLink to=\"/Home\">Home</NavLink>\n      <br></br>\n      {currentUser ? (\n        <>\n          <NavLink to=\"/MyRoutines\">My Routines</NavLink>\n          <br></br>\n        </>\n      ) : null}\n      <NavLink to=\"/Routines\">Routines</NavLink>\n      <br></br>\n      <NavLink to=\"/Activities\">Activities</NavLink>\n      <br></br>\n      {currentUser ? (\n        <>\n          <NavLink to=\"/Home\" onClick={handleUserLogout}>\n            Log Out, {currentUser}\n          </NavLink>\n        </>\n      ) : (\n        <>\n          <NavLink to=\"/SignIn\">Login/Register</NavLink>\n          <br></br>\n        </>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","const URL = \"https://fitnesstrac-kr.herokuapp.com/api/\";\nexport async function fetchData(route) {\n  try {\n    const response = await fetch(`${URL}${route}`);\n\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchDataToken(route, token) {\n  try {\n    const response = await fetch(`${URL}${route}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    let result;\n    try {\n      result = await response.json();\n    } catch (data2) {\n      return [];\n    }\n\n    return result;\n  } catch (data) {\n    console.error(data);\n    return [];\n  }\n}\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { fetchData } from \"../api\";\n\nconst Routines = () => {\n  const [routines, setRoutines] = useState([]);\n\n  useEffect(async () => {\n    const data = await fetchData(\"Routines\");\n\n    setRoutines(data);\n  }, []);\n\n  return (\n    <>\n      <h2>All Public Routines.</h2>\n      {routines.map((rou) => (\n        <div key={rou.id}>\n          <h3>\n            Name: {rou.name} | Goal: {rou.goal} | Creator: {rou.creatorName}\n          </h3>\n          <>\n            <h4 style={{ textIndent: 20 }}>Included Activities:</h4>\n            {rou.activities.map((act) => (\n              <Fragment key={act.id}>\n                <h5 style={{ textIndent: 40 }}>\n                  Name: {act.name} | Duration: {act.duration} | Count:{\" \"}\n                  {act.count}\n                </h5>\n                {act.description ? (\n                  <h6 key={act.name} style={{ textIndent: 60 }}>\n                    ⫷{act.description}⫸\n                  </h6>\n                ) : null}\n              </Fragment>\n            ))}\n          </>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Routines;\n","import React from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\nconst Activities = ({ activities, currentUser }) => {\n  return (\n    <>\n      <h3>\n        {currentUser ? (\n          <NavLink to=\"NewActivity\">\n            <button>Add New Activity</button>\n          </NavLink>\n        ) : null}\n      </h3>\n\n      <h4>Id - Name - Description</h4>\n      {activities.map((act) => (\n        <div key={act.id}>\n          <h5>\n            {act.id} - {act.name} - {act.description}\n          </h5>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Activities;\n","export async function addActivity(rId, activityId, count, duration) {\n  try {\n    const response = await fetch(\n      `http://fitnesstrac-kr.herokuapp.com/api/routines/${rId}/activities`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          activityId,\n          count,\n          duration,\n        }),\n      }\n    );\n    const result = await response.json();\n\n    return result;\n  } catch (data) {\n    return console.error(data);\n  }\n}\nexport async function deleteActivityFromRoutine(raId, token) {\n  try {\n    const response = await fetch(\n      `http://fitnesstrac-kr.herokuapp.com/api/routine_activities/${raId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    const result = await response.json();\n\n    return result;\n  } catch (data) {\n    return console.error(data);\n  }\n}\nexport async function createActivity(name, description, token) {\n  try {\n    const response = await fetch(\n      \"https://fitnesstrac-kr.herokuapp.com/api/activities\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          name,\n          description,\n        }),\n      }\n    );\n    const result = await response.json();\n\n    return result;\n  } catch (data) {\n    return console.error(data);\n  }\n}\nexport async function UpdateActivityCountDuration(\n  raId,\n  count,\n  duration,\n  token\n) {\n  console.log(count, duration);\n  try {\n    const response = await fetch(\n      `https://fitnesstrac-kr.herokuapp.com/api/routine_activities/${raId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          count,\n          duration,\n        }),\n      }\n    );\n    const result = await response.json();\n\n    return result;\n  } catch (data) {\n    return console.error(data);\n  }\n}\n","export async function addRoutine(name, goal, isPublic, token) {\n  try {\n    const response = await fetch(\n      \"https://fitnesstrac-kr.herokuapp.com/api/routines\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          name,\n          goal,\n          isPublic,\n        }),\n      }\n    );\n    const result = await response.json();\n\n    return result;\n  } catch (data) {\n    return console.error(data);\n  }\n}\n\nexport async function deleteRoutine(rId, token) {\n  try {\n    const response = await fetch(\n      `https://fitnesstrac-kr.herokuapp.com/api/routines/${rId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    const result = await response.json();\n\n    return result;\n  } catch (data) {\n    return console.error(data);\n  }\n}\nexport async function updateRoutine(rId, name, goal, isPublic, token) {\n  try {\n    debugger;\n    console.log(rId, name, goal, isPublic, token);\n    const response = await fetch(\n      `https://fitnesstrac-kr.herokuapp.com/api/routines/${rId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          name,\n          goal,\n          isPublic,\n        }),\n      }\n    );\n    const result = await response.json();\n\n    return result;\n  } catch (data) {\n    return console.error(data);\n  }\n}\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { fetchDataToken } from \"../api\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { addActivity, deleteActivityFromRoutine } from \"../api/Activities\";\nimport { deleteRoutine } from \"../api/MyRoutines\";\nconst MyRoutines = ({\n  setActivityToUpdate,\n  setRoutine,\n  currentUser,\n  token,\n  activities,\n}) => {\n  const [myRoutines, setMyRoutines] = useState([]);\n  const [duration, setDuration] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n  const [activity, setActivity] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(async () => {\n    const data = await fetchDataToken(`users/${currentUser}/routines`, token);\n\n    if (data) {\n      setMyRoutines(data);\n    }\n  }, []);\n  function durChange(evt) {\n    setDuration(evt.target.value);\n  }\n  function couChange(evt) {\n    setCount(evt.target.value);\n  }\n  function actChange(evt) {\n    setActivity(evt.target.value);\n  }\n\n  function addActivityToRoutineMaker(rId) {\n    return async function addActivityToRoutine(evt) {\n      evt.preventDefault();\n      const response = await addActivity(rId, activity, duration, count);\n      const act = activities.find((act) => act.id === response.activityId);\n      const addedActivity = { ...act };\n      addedActivity.duration = response.duration;\n      addedActivity.count = response.count;\n      addedActivity.routineId = response.routineId;\n      addedActivity.routineActivityId = response.id;\n\n      const newMyRout = myRoutines.map((rout) => {\n        if (rout.id === addedActivity.routineId) {\n          rout.activities.push(addedActivity);\n        }\n        return rout;\n      });\n      setMyRoutines(newMyRout);\n    };\n  }\n  async function destroyAct(raId, aName, token) {\n    const d = confirm(`Delete ${aName}?`);\n    if (d) {\n      const response = await deleteActivityFromRoutine(raId, token);\n      const act = activities.find((act) => act.id === response.activityId);\n      const deletedActivity = { ...act };\n\n      deletedActivity.duration = response.duration;\n      deletedActivity.count = response.count;\n      deletedActivity.routineId = response.routineId;\n      deletedActivity.routineActivityId = response.id;\n\n      const newMyRout = myRoutines.map((rout) => {\n        if (rout.id === deletedActivity.routineId) {\n          rout.activities = rout.activities.filter(\n            (act) => act.id !== deletedActivity.id\n          );\n        }\n\n        return rout;\n      });\n\n      setMyRoutines(newMyRout);\n    }\n  }\n  function destroyRoutine(rId, rName, token) {\n    const d = confirm(`Delete ${rName}?`);\n    if (d) {\n      deleteRoutine(rId, token);\n      history.push(\"/Deleted\");\n    }\n  }\n\n  function toUpdateRoutineMaker(rId) {\n    return function toUpdateRoutine(evt) {\n      evt.preventDefault();\n      setRoutine(rId);\n      history.push(\"/UpdateRoutine\");\n    };\n  }\n  function updateCountDurationMaker(act) {\n    return function updateCountDuration(evt) {\n      evt.preventDefault();\n      setActivityToUpdate(act);\n      history.push(\"/UpdateActivity\");\n    };\n  }\n  return (\n    <>\n      <h2>My Routines</h2>\n      <NavLink to=\"NewRoutine\">\n        <button>Add New Routine</button>\n      </NavLink>\n\n      {myRoutines.map((rou) => (\n        <div key={rou.id}>\n          <h3>\n            Name: {rou.name} | Goal: {rou.goal} | Creator: {rou.creatorName}\n            <button type=\"button\" onClick={toUpdateRoutineMaker(rou)}>\n              Update {rou.name}\n            </button>\n          </h3>\n\n          <h4 style={{ textIndent: 20 }}>Included Activities:</h4>\n          {rou.activities.map((act) => (\n            <Fragment key={act.id}>\n              <h4 style={{ textIndent: 40 }}>\n                Name: {act.name} | Duration: {act.duration} | Count: {act.count}\n                <button onClick={updateCountDurationMaker(act)}>Update</button>\n                <button\n                  onClick={() =>\n                    destroyAct(act.routineActivityId, act.name, token)\n                  }\n                >\n                  Delete\n                </button>\n              </h4>\n              <h5 key={act.name} style={{ textIndent: 60 }}>\n                ⫷{act.description}⫸\n              </h5>\n            </Fragment>\n          ))}\n          <form onSubmit={addActivityToRoutineMaker(rou.id)}>\n            <label>\n              Activity to Add:\n              <select\n                style={{ width: \"130px\" }}\n                onChange={actChange}\n                defaultValue=\"none\"\n              >\n                <option value=\"none\" disabled hidden>\n                  Select an Option\n                </option>\n                {activities.map((act) => (\n                  <option key={act.id} value={act.id}>\n                    {act.name} - {act.description}\n                  </option>\n                ))}\n              </select>\n            </label>\n            <label>\n              Duration:\n              <input\n                type=\"number\"\n                style={{ width: \"50px\" }}\n                onChange={durChange}\n              ></input>\n            </label>\n            <label>\n              Count:\n              <input\n                type=\"number\"\n                style={{ width: \"50px\" }}\n                onChange={couChange}\n              ></input>\n            </label>\n            <button>Add Activity to {rou.name}</button>\n          </form>\n\n          <button\n            type=\"button\"\n            onClick={() => destroyRoutine(rou.id, rou.name, token)}\n          >\n            Delete Routine\n          </button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default MyRoutines;\n","import React, { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nconst { signIn } = require(\"../api/auth\");\nconst SignIn = ({ setToken, setCurrentUser }) => {\n  const [usernameInput, setUsernameInput] = useState(\"\");\n  const [pwInput, setPwInput] = useState(\"\");\n  const history = useHistory();\n  function clearInput() {\n    setPwInput(\"\");\n    setUsernameInput(\"\");\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const response = await signIn(usernameInput, pwInput);\n\n    if (response.token) {\n      localStorage.setItem(\"token\", response.token);\n      setToken(response.token);\n      setCurrentUser(response.user.username);\n      clearInput();\n      history.push(\"/MyRoutines\");\n    } else {\n      alert(response.message);\n      clearInput();\n    }\n  };\n\n  const uChange = (evt) => {\n    evt.preventDefault();\n    setUsernameInput(evt.target.value);\n  };\n  const pChange = (evt) => {\n    evt.preventDefault();\n    setPwInput(evt.target.value);\n  };\n  return (\n    <>\n      <h1>Sign In</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username: <br></br>\n          <input type=\"text\" value={usernameInput} onChange={uChange}></input>\n          <br></br>\n        </label>\n        <label>\n          Password: <br></br>\n          <input type=\"password\" value={pwInput} onChange={pChange}></input>\n        </label>\n        <br></br>\n        <button type=\"submit\">Sign In</button>\n      </form>\n      <br></br>\n      <NavLink to=\"/SignUp\">Need an Account? Sign Up!</NavLink>\n    </>\n  );\n};\n\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nconst { register } = require(\"../api/auth\");\nconst SignUp = ({ setToken, setCurrentUser }) => {\n  const [usernameInput, setUsernameInput] = useState(\"\");\n  const [pwInput, setPwInput] = useState(\"\");\n  const history = useHistory();\n  function clearInput() {\n    setPwInput(\"\");\n    setUsernameInput(\"\");\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const response = await register(usernameInput, pwInput);\n\n    if (response.token) {\n      localStorage.setItem(\"token\", response.token);\n      setToken(response.token);\n      setCurrentUser(response.user.username);\n      clearInput();\n      history.push(\"/MyRoutines\");\n    } else {\n      alert(response.message);\n    }\n  };\n\n  const uChange = (evt) => {\n    evt.preventDefault();\n    setUsernameInput(evt.target.value);\n  };\n  const pChange = (evt) => {\n    evt.preventDefault();\n    setPwInput(evt.target.value);\n  };\n  return (\n    <>\n      <h1>Sign Up</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username: <br></br>\n          <input type=\"text\" value={usernameInput} onChange={uChange}></input>\n          <br></br>\n        </label>\n        <label>\n          Password: <br></br>\n          <input type=\"text\" value={pwInput} onChange={pChange}></input>\n        </label>\n        <br></br>\n        <button type=\"submit\">Sign Up</button>\n      </form>\n      <br></br>\n      <NavLink to=\"/SignIn\">Already Have An Account? Sign In.</NavLink>\n    </>\n  );\n};\n\nexport default SignUp;\n","const Home = ({ currentUser }) => {\n  return (\n    <div>\n      <h1>Welcome Home{currentUser ? `, ${currentUser}.` : \".\"}</h1>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { addRoutine } from \"../api/MyRoutines\";\n\nconst NewRoutine = ({ token }) => {\n  const [name, setName] = useState(\"\");\n  const [goal, setGoal] = useState(\"\");\n  const [isPublic, setIsPublic] = useState(false);\n  const history = useHistory();\n\n  function clearInput() {\n    setName(\"\");\n    setGoal(\"\");\n    setIsPublic(false);\n  }\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const response = await addRoutine(name, goal, isPublic, token);\n\n    if (!response.error) {\n      clearInput();\n      history.push(\"/MyRoutines\");\n    } else {\n      alert(response.message);\n    }\n  };\n  const nChange = (evt) => {\n    evt.preventDefault();\n    setName(evt.target.value);\n  };\n  const gChange = (evt) => {\n    evt.preventDefault();\n    setGoal(evt.target.value);\n  };\n  const pChange = (evt) => {\n    console.log(evt.target.checked);\n    setIsPublic(evt.target.checked);\n  };\n\n  return (\n    <>\n      <h1>Create a New Routine.</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name: <br></br>\n          <input type=\"text\" value={name} onChange={nChange}></input>\n          <br></br>\n        </label>\n        <br></br>\n        <label>\n          Goal: <br></br>\n          <input type=\"text\" value={goal} onChange={gChange}></input>\n          <br></br>\n        </label>\n        <br></br>\n        <label>\n          Public Routine?<br></br>\n          <br></br>\n          <label>\n            Public\n            <input type=\"checkbox\" value={isPublic} onChange={pChange}></input>\n          </label>\n          <br></br>\n        </label>\n        <br></br>\n        <button type=\"submit\">Create!</button>\n      </form>\n    </>\n  );\n};\nexport default NewRoutine;\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Deleted = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const timer = setTimeout(() => history.push(\"/MyRoutines\"), 1500);\n    return () => clearTimeout(timer);\n  }, []);\n  return (\n    <div>\n      <h1>The Item Was Deleted.</h1>\n    </div>\n  );\n};\nexport default Deleted;\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Added = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const timer = setTimeout(() => history.push(\"/MyRoutines\"), 1500);\n    return () => clearTimeout(timer);\n  }, []);\n  return (\n    <div>\n      <h1>The Activity Was Added.</h1>\n    </div>\n  );\n};\nexport default Added;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { updateRoutine } from \"../api/MyRoutines\";\nconst UpdateRoutine = ({ routine, token }) => {\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [goal, setGoal] = useState(\"\");\n  const [isPublic, setIsPublic] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    setId(routine.id);\n    setName(routine.name);\n    setGoal(routine.goal);\n    setIsPublic(routine.isPublic);\n  }, []);\n  function clearInput() {\n    setName(\"\");\n    setGoal(\"\");\n    setIsPublic(false);\n  }\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const response = await updateRoutine(id, name, goal, isPublic, token);\n\n    if (!response.error) {\n      clearInput();\n      history.push(\"/MyRoutines\");\n    } else {\n      alert(response.message);\n    }\n  };\n  const nChange = (evt) => {\n    evt.preventDefault();\n    setName(evt.target.value);\n  };\n  const gChange = (evt) => {\n    evt.preventDefault();\n    setGoal(evt.target.value);\n  };\n  const pChange = (evt) => {\n    setIsPublic(evt.target.checked);\n  };\n\n  return (\n    <>\n      <h1>Update a Routine.</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name: <br></br>\n          <input\n            type=\"text\"\n            placeholder={routine.name}\n            value={name}\n            onChange={nChange}\n          ></input>\n          <br></br>\n        </label>\n        <br></br>\n        <label>\n          Goal: <br></br>\n          <input\n            type=\"text\"\n            placeholder={routine.goal}\n            value={goal}\n            onChange={gChange}\n          ></input>\n          <br></br>\n        </label>\n        <br></br>\n        <label>\n          Public Routine?<br></br>\n          <br></br>\n          <label>\n            Public\n            <input type=\"checkbox\" value={isPublic} onChange={pChange}></input>\n          </label>\n          <br></br>\n        </label>\n        <br></br>\n        <button type=\"submit\">Update!</button>\n      </form>\n    </>\n  );\n};\nexport default UpdateRoutine;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createActivity } from \"../api/Activities\";\n\nconst NewActivity = ({ token }) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const history = useHistory();\n\n  function clearInput() {\n    setName(\"\");\n    setDescription(\"\");\n  }\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const response = await createActivity(name, description, token);\n\n    if (!response.error) {\n      clearInput();\n      history.push(\"/Activities\");\n    } else {\n      alert(response.message);\n    }\n  };\n\n  const nChange = (evt) => {\n    evt.preventDefault();\n    setName(evt.target.value);\n  };\n  const dChange = (evt) => {\n    evt.preventDefault();\n    setDescription(evt.target.value);\n  };\n\n  return (\n    <>\n      <h1>Create a New Activity</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name: <br></br>\n          <input type=\"text\" value={name} onChange={nChange}></input>\n        </label>\n        <br></br>\n        <label>\n          Description: <br></br>\n          <input type=\"text\" value={description} onChange={dChange}></input>\n        </label>\n        <br></br>\n        <br></br>\n        <button type=\"submit\">Create!</button>\n      </form>\n    </>\n  );\n};\nexport default NewActivity;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { UpdateActivityCountDuration } from \"../api/Activities\";\nconst UpdateActivity = ({ activityToUpdate, token }) => {\n  const [raid, setRaid] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setRaid(activityToUpdate.routineActivityId);\n    setCount(activityToUpdate.count);\n    setDuration(activityToUpdate.duration);\n  }, []);\n  function clearInput() {\n    setCount(\"\");\n    setDuration(\"\");\n  }\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const response = await UpdateActivityCountDuration(\n      raid,\n      count,\n      duration,\n      token\n    );\n\n    if (!response.error) {\n      clearInput();\n      history.push(\"/MyRoutines\");\n    } else {\n      alert(response.message);\n    }\n  };\n  const cChange = (evt) => {\n    evt.preventDefault();\n    setCount(evt.target.value);\n  };\n  const dChange = (evt) => {\n    evt.preventDefault();\n    setDuration(evt.target.value);\n  };\n\n  return (\n    <>\n      <h1>{activityToUpdate.name} ↴</h1>\n      <h3 style={{ textIndent: 40 }}>⫷{activityToUpdate.description}⫸</h3>\n\n      <form onSubmit={handleSubmit}>\n        <label>\n          Count: <br></br>\n          <input type=\"text\" value={count} onChange={cChange}></input>\n          <br></br>\n        </label>\n        <br></br>\n        <label>\n          Duration: <br></br>\n          <input type=\"text\" value={duration} onChange={dChange}></input>\n          <br></br>\n        </label>\n        <br></br>\n\n        <button type=\"submit\">Update!</button>\n      </form>\n    </>\n  );\n};\n\nexport default UpdateActivity;\n","export async function getMe(token) {\n  return fetch(\"https://fitnesstrac-kr.herokuapp.com/api/users/me\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      return result;\n    })\n    .catch(console.error);\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Header,\n  Routines,\n  Activities,\n  MyRoutines,\n  SignIn,\n  SignUp,\n  Home,\n  NewRoutine,\n  Deleted,\n  Added,\n  UpdateRoutine,\n  NewActivity,\n  UpdateActivity,\n} from \"./components\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { getMe } from \"./api/getMe\";\nimport { fetchData } from \"./api\";\n\nconst App = () => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [currentUser, setCurrentUser] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [routine, setRoutine] = useState({});\n  const [activityToUpdate, setActivityToUpdate] = useState({});\n\n  useEffect(async () => {\n    if (token) {\n      await getMe(token).then((response) => {\n        setCurrentUser(response.username);\n      });\n    }\n  }, []);\n  useEffect(async () => {\n    const data = await fetchData(\"Activities\");\n    setActivities(data);\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Header {...{ setCurrentUser, currentUser }} />\n        <Switch>\n          <Route path=\"/Home\">\n            <Home {...{ currentUser }} />\n          </Route>\n          <Route path=\"/Routines\">\n            <Routines />\n          </Route>\n          <Route path=\"/Activities\">\n            <Activities {...{ currentUser, activities }} />\n          </Route>\n          <Route path=\"/MyRoutines\">\n            {currentUser ? (\n              <MyRoutines\n                {...{\n                  setActivityToUpdate,\n                  setRoutine,\n                  currentUser,\n                  token,\n                  activities,\n                }}\n              />\n            ) : null}\n          </Route>\n          <Route path=\"/SignIn\">\n            <SignIn {...{ setToken, setCurrentUser }} />\n          </Route>\n          <Route path=\"/SignUp\">\n            <SignUp {...{ setToken, setCurrentUser }} />\n          </Route>\n          <Route path=\"/NewRoutine\">\n            <NewRoutine {...{ token }} />\n          </Route>\n          <Route path=\"/NewActivity\">\n            <NewActivity {...{ token }} />\n          </Route>\n          <Route path=\"/Deleted\">\n            <Deleted />\n          </Route>\n          <Route path=\"/Added\">\n            <Added />\n          </Route>\n          <Route path=\"/UpdateRoutine\">\n            <UpdateRoutine {...{ routine, token }} />\n          </Route>\n          <Route path=\"/UpdateActivity\">\n            <UpdateActivity {...{ activityToUpdate, token }} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}